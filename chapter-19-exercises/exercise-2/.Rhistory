# Load the `shiny` package
library("shiny")
?numericInput
runApp()
# Exercise 2: a basic Shiny app
# Load the `shiny` package
library("shiny")
# Define a new `ui` variable. This variable should be assigned a `fluidPage()` layout
# The `fluidPage()` layout should be passed the following:
my_ui <- fluidPage(
# A `titlePanel()` layout with the text "Cost Calculator"
titlePanel("Cost Calculator"),
# A `numericInput()` widget with the label "Price (in dollars)"
# It should have a default value of 0 and a minimum value of 0
# Hint: look up the function's arguments in the documentation!
numericInput(inputID = "price", label = "Price (in dollars)", value = 0, min = 0),
# A second `numericInput()` widget with the label "Quantity"
# It should have a default value of 1 and a minimum value of 1
numericInput(inputID = "quantity", label = "Quantity", value = 1, min = 1),
# The word "Cost", strongly bolded
p(strong("Cost")),
# A `textOutput()` output of a calculated value labeled `cost`
textOutput(outputId =  "cost")
)
# Define a `server` function (with appropriate arguments)
# This function should perform the following:
my_server <- function(input_list, output_list){
# Assign a reactive `renderText()` function to the output's `cost` value
# The reactive expression should return the input `price` times the `quantity`
# So it looks nice, paste a "$" in front of it!
output_list$cost <- renderText({
total <- input_list$price * input_list$quantity
return(total)
})
}
shinyApp(ui <- my_ui, server = my_server)
runApp()
ui <- fluidPage(
# A `titlePanel()` layout with the text "Cost Calculator"
titlePanel("Cost Calculator"),
# A `numericInput()` widget with the label "Price (in dollars)"
# It should have a default value of 0 and a minimum value of 0
# Hint: look up the function's arguments in the documentation!
numericInput(inputID = "price", label = "Price (in dollars)", value = 0, min = 0),
# A second `numericInput()` widget with the label "Quantity"
# It should have a default value of 1 and a minimum value of 1
numericInput(inputID = "quantity", label = "Quantity", value = 1, min = 1),
# The word "Cost", strongly bolded
p(strong("Cost")),
# A `textOutput()` output of a calculated value labeled `cost`
textOutput(outputId =  "cost")
)
ui <- fluidPage(
# A `titlePanel()` layout with the text "Cost Calculator"
titlePanel("Cost Calculator"),
# A `numericInput()` widget with the label "Price (in dollars)"
# It should have a default value of 0 and a minimum value of 0
# Hint: look up the function's arguments in the documentation!
numericInput(inputID = "price", label = "Price (in dollars)", value = 0, min = 0),
# A second `numericInput()` widget with the label "Quantity"
# It should have a default value of 1 and a minimum value of 1
numericInput(inputID = "quantity", label = "Quantity", value = 1, min = 1),
# The word "Cost", strongly bolded
p(strong("Cost")),
# A `textOutput()` output of a calculated value labeled `cost`
textOutput(outputId =  "cost")
)
# The `fluidPage()` layout should be passed the following:
ui <- fluidPage(
# A `titlePanel()` layout with the text "Cost Calculator"
titlePanel("Cost Calculator"),
# A `numericInput()` widget with the label "Price (in dollars)"
# It should have a default value of 0 and a minimum value of 0
# Hint: look up the function's arguments in the documentation!
numericInput(inputID = "price", label = "Price (in dollars)", value = 0, min = 0),
# A second `numericInput()` widget with the label "Quantity"
# It should have a default value of 1 and a minimum value of 1
numericInput(inputID = "quantity", label = "Quantity", value = 1, min = 1),
# The word "Cost", strongly bolded
p(strong("Cost")),
# A `textOutput()` output of a calculated value labeled `cost`
textOutput(outputId =  "cost")
)
ui <- fluidPage(
# A `titlePanel()` layout with the text "Cost Calculator"
titlePanel("Cost Calculator"),
# A `numericInput()` widget with the label "Price (in dollars)"
# It should have a default value of 0 and a minimum value of 0
# Hint: look up the function's arguments in the documentation!
numericInput("price", label = "Price (in dollars)", value = 0, min = 0),
# A second `numericInput()` widget with the label "Quantity"
# It should have a default value of 1 and a minimum value of 1
numericInput("quantity", label = "Quantity", value = 1, min = 1),
# The word "Cost", strongly bolded
p(strong("Cost")),
# A `textOutput()` output of a calculated value labeled `cost`
textOutput(outputId =  "cost")
)
server <- function(input_list, output_list){
# Assign a reactive `renderText()` function to the output's `cost` value
# The reactive expression should return the input `price` times the `quantity`
# So it looks nice, paste a "$" in front of it!
output_list$cost <- renderText({
total <- input_list$price * input_list$quantity
return(total)
})
}
library("shiny")
# Define a new `ui` variable. This variable should be assigned a `fluidPage()` layout
# The `fluidPage()` layout should be passed the following:
ui <- fluidPage(
# A `titlePanel()` layout with the text "Cost Calculator"
titlePanel("Cost Calculator"),
# A `numericInput()` widget with the label "Price (in dollars)"
# It should have a default value of 0 and a minimum value of 0
# Hint: look up the function's arguments in the documentation!
numericInput("price", label = "Price (in dollars)", value = 0, min = 0),
# A second `numericInput()` widget with the label "Quantity"
# It should have a default value of 1 and a minimum value of 1
numericInput("quantity", label = "Quantity", value = 1, min = 1),
# The word "Cost", strongly bolded
p(strong("Cost")),
# A `textOutput()` output of a calculated value labeled `cost`
textOutput(outputId =  "cost")
)
# Define a `server` function (with appropriate arguments)
# This function should perform the following:
server <- function(input_list, output_list){
# Assign a reactive `renderText()` function to the output's `cost` value
# The reactive expression should return the input `price` times the `quantity`
# So it looks nice, paste a "$" in front of it!
output_list$cost <- renderText({
total <- input_list$price * input_list$quantity
return(total)
})
}
shinyApp(ui <- ui, server = my_server)
# Create a new `shinyApp()` using the above ui and server
shinyApp(ui <- ui, server = server)
server <- function(input_list, output_list){
# Assign a reactive `renderText()` function to the output's `cost` value
# The reactive expression should return the input `price` times the `quantity`
# So it looks nice, paste a "$" in front of it!
output_list$cost <- renderText({
total <- input_list$price * input_list$quantity
return(paste0("$", total))
})
}
# Create a new `shinyApp()` using the above ui and server
shinyApp(ui <- ui, server = server)
