# Load libraries so they are available
library("shiny")
# We'll begin by defining some of the UI elements as variables
# This helps keep the code organized and easier to debug
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
"Introduction" ,
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT Chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html", "(source)")
)
# A paragraph containing a 1-2 sentence description of what the diagram
# shows. Your paragraph should include both `strong()` and emphasized `em()`
# text.
)
View(intro_panel)
library("shiny")
library("ggplot2")
# Read data file
income_growth <- read.csv("data/income_growth_1980-2014.csv")
# Define a server function
server <- function(input, output) {
output$plot <- renderPlot({
# return the plot
ggplot(data = income_growth) +
geom_point(mapping = aes(
x = Income.Percentile, y = Average.Growth.Perc
), color = "gray") +
geom_point(mapping = aes(
x = Income.Percentile, y = Post.Tax.Growth.Perc
), color = "red") +
labs(x = "Income Percentile", y = "Income Growth (%)") +
scale_x_continuous(limits = input$percentile)
})
}
source("app_ui.R")
source("app_server.R")
# You will need to fill in
runApp()
# Load libraries so they are available
library("shiny")
# We'll begin by defining some of the UI elements as variables
# This helps keep the code organized and easier to debug
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
"Introduction" ,
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT Chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html", "(source)")
)
# A paragraph containing a 1-2 sentence description of what the diagram
# shows. Your paragraph should include both `strong()` and emphasized `em()`
# text.
)
# Next, we'll define a few UI elements to render in our second panel
# Define a variable `sidebar_content` as a `sidebarPanel()` UI element
# containing the following information:
sidebar_content <- sidebarPanel(
# A `sliderInput()` for the 'percentile' value, labeled "Income Percentile".
# This slider should let the user pick a range between 0 and 100
sliderInput(inputId = "Percentile", label = "Income Percentile", min = 0, max = 100, value = c(0,100))
)
# Define a variable `main_content` as a `mainPanel()` UI element
# containing the following information:
main_content <- mainPanel(
# A `plotOutput()` element showing the 'plot' output (defined in the server)
plotOutput(outputId = "plot"),
# A paragraph with a hyperlink to the data source
# http://gabriel-zucman.eu/usdina/
p("Data from", a(href = "http://gabriel-zucman.eu/usdina/", "http://gabriel-zucman.eu/usdina/"))
)
# Define a variable `growth_panel` for your second page. It should be a
# `tabPanel()` with a title "Growth Chart" to represent the second tab.
# This layout will contain the following elements:
growth_panel <- tabPanel(
# A `titlePanel()` with the text "Income growth 1980-2014"
titlePanel("Income growth 1980-2014"),
# A `sidebarLayout()` to create two columns.
# The sidebar layout will contain elements:
sidebarLayout(sidebar_content, main_content)
# Your `sidebar_content`
# Your `main_content`
)
ui <- navbarPage("Income Inequality",
intro_panel,
sidebar_content,
main_content,
growth_panel
)
shinyApp(ui = ui, server = server)
setwd("~/Desktop/book-exercises/chapter-19-exercises/exercise-4")
runApp()
growth_panel <- tabPanel("growth_panel",
# A `titlePanel()` with the text "Income growth 1980-2014"
titlePanel("Income growth 1980-2014"),
# A `sidebarLayout()` to create two columns.
# The sidebar layout will contain elements:
sidebarLayout(sidebar_content, main_content)
# Your `sidebar_content`
# Your `main_content`
)
# Load libraries so they are available
library("shiny")
# We'll begin by defining some of the UI elements as variables
# This helps keep the code organized and easier to debug
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
"Introduction" ,
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT Chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html", "(source)")
)
# A paragraph containing a 1-2 sentence description of what the diagram
# shows. Your paragraph should include both `strong()` and emphasized `em()`
# text.
)
# Next, we'll define a few UI elements to render in our second panel
# Define a variable `sidebar_content` as a `sidebarPanel()` UI element
# containing the following information:
sidebar_content <- sidebarPanel(
# A `sliderInput()` for the 'percentile' value, labeled "Income Percentile".
# This slider should let the user pick a range between 0 and 100
sliderInput(inputId = "Percentile", label = "Income Percentile", min = 0, max = 100, value = c(0,100))
)
# Define a variable `main_content` as a `mainPanel()` UI element
# containing the following information:
main_content <- mainPanel(
# A `plotOutput()` element showing the 'plot' output (defined in the server)
plotOutput(outputId = "plot"),
# A paragraph with a hyperlink to the data source
# http://gabriel-zucman.eu/usdina/
p("Data from", a(href = "http://gabriel-zucman.eu/usdina/", "http://gabriel-zucman.eu/usdina/"))
)
# Define a variable `growth_panel` for your second page. It should be a
# `tabPanel()` with a title "Growth Chart" to represent the second tab.
# This layout will contain the following elements:
growth_panel <- tabPanel("growth_panel",
# A `titlePanel()` with the text "Income growth 1980-2014"
titlePanel("Income growth 1980-2014"),
# A `sidebarLayout()` to create two columns.
# The sidebar layout will contain elements:
sidebarLayout(sidebar_content, main_content)
# Your `sidebar_content`
# Your `main_content`
)
# Finally, define a `ui` variable, assigning it a `navbarPage()` layout.
# You will use `shinyUI()` to render this variable (in `app.R`)
# Give the layout a title of "Income Inequality".
# The layout should include the following elements:
# - Your `intro_panel`
# - Your `growth_panel`
ui <- navbarPage("Income Inequality",
intro_panel,
sidebar_content,
main_content,
growth_panel
)
# Load libraries so they are available
library("shiny")
# We'll begin by defining some of the UI elements as variables
# This helps keep the code organized and easier to debug
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
"Introduction" ,
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT Chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html", "(source)")
)
# A paragraph containing a 1-2 sentence description of what the diagram
# shows. Your paragraph should include both `strong()` and emphasized `em()`
# text.
)
# Next, we'll define a few UI elements to render in our second panel
# Define a variable `sidebar_content` as a `sidebarPanel()` UI element
# containing the following information:
sidebar_content <- sidebarPanel(
# A `sliderInput()` for the 'percentile' value, labeled "Income Percentile".
# This slider should let the user pick a range between 0 and 100
sliderInput(inputId = "Percentile", label = "Income Percentile", min = 0, max = 100, value = c(0,100))
)
# Define a variable `main_content` as a `mainPanel()` UI element
# containing the following information:
main_content <- mainPanel(
# A `plotOutput()` element showing the 'plot' output (defined in the server)
plotOutput(outputId = "plot"),
# A paragraph with a hyperlink to the data source
# http://gabriel-zucman.eu/usdina/
p("Data from", a(href = "http://gabriel-zucman.eu/usdina/", "http://gabriel-zucman.eu/usdina/"))
)
# Define a variable `growth_panel` for your second page. It should be a
# `tabPanel()` with a title "Growth Chart" to represent the second tab.
# This layout will contain the following elements:
growth_panel <- tabPanel("growth_panel",
# A `titlePanel()` with the text "Income growth 1980-2014"
titlePanel("Income growth 1980-2014"),
# A `sidebarLayout()` to create two columns.
# The sidebar layout will contain elements:
sidebarLayout(sidebar_content, main_content)
# Your `sidebar_content`
# Your `main_content`
)
# Finally, define a `ui` variable, assigning it a `navbarPage()` layout.
# You will use `shinyUI()` to render this variable (in `app.R`)
# Give the layout a title of "Income Inequality".
# The layout should include the following elements:
# - Your `intro_panel`
# - Your `growth_panel`
ui <- navbarPage("Income Inequality",
intro_panel,
sidebar_content,
main_content,
growth_panel
)
# Load libraries so they are available
library("shiny")
# We'll begin by defining some of the UI elements as variables
# This helps keep the code organized and easier to debug
# Define a variable `intro_panel` for your first page. It should be a
# `tabPanel()` with a title "Introduction" to represent the first tab.
# This layout will contain the following elements:
intro_panel <- tabPanel(
"Introduction" ,
# A `titlePanel()` with the text "Income Inequality"
titlePanel("Income Inequality"),
# A paragraph `p()` describing with the text: "The below diagram was created
# by the New York Times to illustrate the increasing level of inequality in
# the US."
p("The below diagram was created by the New York Times to illustrate the increasing level of inequality in the US."),
# An image `img()` to display. This content should have a `src` attribute of
# "inequality.png" (which will refer to the file in the `www/` folder).
img(src = "inequality.png", alt = "Example NYT Chart"),
# A paragraph containing a hyperlink `a()` to the source of the article at
# https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html
p(
a(href = "https://www.nytimes.com/interactive/2017/08/07/opinion/leonhardt-income-inequality.html", "(source)")
)
# A paragraph containing a 1-2 sentence description of what the diagram
# shows. Your paragraph should include both `strong()` and emphasized `em()`
# text.
)
# Next, we'll define a few UI elements to render in our second panel
# Define a variable `sidebar_content` as a `sidebarPanel()` UI element
# containing the following information:
sidebar_content <- sidebarPanel(
# A `sliderInput()` for the 'percentile' value, labeled "Income Percentile".
# This slider should let the user pick a range between 0 and 100
sliderInput(inputId = "Percentile", label = "Income Percentile", min = 0, max = 100, value = c(0,100))
)
# Define a variable `main_content` as a `mainPanel()` UI element
# containing the following information:
main_content <- mainPanel(
# A `plotOutput()` element showing the 'plot' output (defined in the server)
plotOutput(outputId = "plot"),
# A paragraph with a hyperlink to the data source
# http://gabriel-zucman.eu/usdina/
p("Data from", a(href = "http://gabriel-zucman.eu/usdina/", "http://gabriel-zucman.eu/usdina/"))
)
# Define a variable `growth_panel` for your second page. It should be a
# `tabPanel()` with a title "Growth Chart" to represent the second tab.
# This layout will contain the following elements:
growth_panel <- tabPanel("growth_panel",
# A `titlePanel()` with the text "Income growth 1980-2014"
titlePanel("Income growth 1980-2014"),
# A `sidebarLayout()` to create two columns.
# The sidebar layout will contain elements:
sidebarLayout(sidebar_content, main_content)
# Your `sidebar_content`
# Your `main_content`
)
# Finally, define a `ui` variable, assigning it a `navbarPage()` layout.
# You will use `shinyUI()` to render this variable (in `app.R`)
# Give the layout a title of "Income Inequality".
# The layout should include the following elements:
# - Your `intro_panel`
# - Your `growth_panel`
ui <- navbarPage("Income Inequality",
intro_panel,
sidebar_content,
main_content,
growth_panel
)
runApp()
